
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * Form that displays the results of Students in their CS coursework in a table 
 * @author Oliver
 */
public class Results extends javax.swing.JFrame {

    final String marksFile = "projectMarks.csv";//the file from which results are to be read

    /**
     * Creates new form Results
     */
    public Results() {
        initComponents();//populate form 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        resultsTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        avgMarkTxt = new javax.swing.JTextField();
        avgGradeTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        resultsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Forename", "Surname", "Discussion", "Investigation", "Design ", "Prototype", "Refinement", "Development", "D Testing", "Testiing", "Evaluation", "Total", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(resultsTbl);
        if (resultsTbl.getColumnModel().getColumnCount() > 0) {
            resultsTbl.getColumnModel().getColumn(1).setResizable(false);
            resultsTbl.getColumnModel().getColumn(2).setResizable(false);
            resultsTbl.getColumnModel().getColumn(3).setResizable(false);
            resultsTbl.getColumnModel().getColumn(4).setResizable(false);
            resultsTbl.getColumnModel().getColumn(5).setResizable(false);
            resultsTbl.getColumnModel().getColumn(6).setResizable(false);
            resultsTbl.getColumnModel().getColumn(7).setResizable(false);
            resultsTbl.getColumnModel().getColumn(8).setResizable(false);
            resultsTbl.getColumnModel().getColumn(9).setResizable(false);
            resultsTbl.getColumnModel().getColumn(10).setResizable(false);
            resultsTbl.getColumnModel().getColumn(11).setResizable(false);
            resultsTbl.getColumnModel().getColumn(12).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Average Total Mark:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Average Grade:");

        avgMarkTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        avgGradeTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1035, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(avgMarkTxt)
                    .addComponent(avgGradeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(avgMarkTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(avgGradeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        setUpTable();//populate the table
    }//GEN-LAST:event_formWindowActivated

    /**
     * method that finds students who did CS coursework and displays their marks in the table 
     * Average mark and grade are also calculated and displayed 
     */
    public void setUpTable() {
        String ids[] = getIDs();//get the student IDs from the student details file
        String nullData[] = null;
        String newRow[] = new String[13];//array that holds the data for each field in a new row 
        int totalMark;//holds the total marks of one student
        int grandTotal = 0;//total marks of all students - used to work out the average
        String newMark;
        
        int counter = 0;//initialise counter
        
        //create an object for adding data to the table
        DefaultTableModel tableModel;
        tableModel = (DefaultTableModel) resultsTbl.getModel();

        while (ids[counter] != null){//while there are still more student IDs to process
            totalMark = 0;//initialise the total mark for this student
            newRow[0] = Search.findRecord(StudentDetails.FILE_NAME, ids[counter], 0)[1];//find the first name of the student, add it to the new row
            newRow[1] = Search.findRecord(StudentDetails.FILE_NAME, ids[counter], 0)[2];//find the last name of the student, add it to the new row
            
            for(int i = 2; i < 11; i++){//go through each individual mark for each unit
                newMark = Search.findRecord(marksFile, ids[counter], 0)[i - 1];
                newRow[i] = newMark;//add the new mark to the row
                totalMark = totalMark + Integer.parseInt(newMark);//update the student total
            }
            
            newRow[11] = String.valueOf(totalMark);//set total 
            newRow[12] = chooseGrade(totalMark);//set grade
            
            tableModel.addRow(newRow);//add the row
            
            grandTotal = grandTotal + totalMark;//update the grand total
            counter++;//increment the counter
        }  
        
        setTextBoxes(counter, grandTotal);//display the avg mark and avg grade using this method
        
    }
    
    /**
     * Calculates the avg mark and grade and displays them in their labels 
     * @param numOfStudents - number of students whose marks are being processed
     * @param grandTotal - total amount of marks from all students
     */
    public void setTextBoxes(int numOfStudents, int grandTotal){
        double avgMark = (double) grandTotal/numOfStudents;//work out the avg
        
        //set the  labels' contents
        avgMarkTxt.setText(String.valueOf(avgMark));
        avgGradeTxt.setText(chooseGrade((int)avgMark));
    }
    
    /**
     * method that takes a percentage mark and assigns a letter grade to it
     * @param mark the percentage mark (0 to 100)
     * @return A, B, C, D, E or U  depending on the mark
     */
    public String chooseGrade(int mark){
        if(mark >= 40 && mark < 50) return "E";
        if(mark >= 50 && mark < 60) return "D";
        if(mark >= 60 && mark < 70) return "C";
        if(mark >= 70 && mark < 80) return "B";
        if(mark >= 80) return "A";
        else return "U";
    }

    /**
     * this method allows the student details of students who have their marks recorded in the marks file to be found in the student details file
     * @return the array containing all student IDs from the marksFile
     */
    public String[] getIDs() {
        String ids[] = new String[9999];//plenty of room
        String line;//holds each new line read in from the file
        String fields[];//each each field in the new line 
        int counter = 0;

        try {
            //open the file 
            FileReader fileReader = new FileReader(marksFile);
            BufferedReader reader = new BufferedReader(fileReader);

            //get all student IDs from the file
            while ((line = reader.readLine()) != null) {
                fields = line.split(",");
                ids[counter] = fields[0];//add the ID to the array
                counter++;//move on to the next item in the array
            }
            //System.out.println(ids.length);
            return ids;

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Results.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Results.class.getName()).log(Level.SEVERE, null, ex);
        }

        return ids;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Results().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField avgGradeTxt;
    private javax.swing.JTextField avgMarkTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable resultsTbl;
    // End of variables declaration//GEN-END:variables

}
